openapi: 3.0.3
info:
  title: Your Project API
  version: 1.0.0
  description: Your project description
paths:
  /api/assets/:
    get:
      operationId: assets_list
      tags:
      - assets
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetList'
          description: ''
    post:
      operationId: assets_create
      tags:
      - assets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssetCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssetCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetCreate'
          description: ''
  /api/assets/{id}/:
    get:
      operationId: assets_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - assets
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetDetail'
          description: ''
    put:
      operationId: assets_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - assets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AssetCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AssetCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetCreate'
          description: ''
    patch:
      operationId: assets_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - assets
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAssetCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAssetCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAssetCreate'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetCreate'
          description: ''
    delete:
      operationId: assets_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - assets
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/assets/employee/:
    get:
      operationId: assets_employee_list
      tags:
      - assets
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAssetList'
          description: ''
  /api/employees/:
    get:
      operationId: employees_list
      tags:
      - employees
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmployeeList'
          description: ''
    post:
      operationId: employees_create
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeCreate'
          description: ''
  /api/employees-side/{id}/:
    put:
      operationId: employees_side_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - employees-side
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeSideUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeSideUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeSideUpdate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeSideUpdate'
          description: ''
    patch:
      operationId: employees_side_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - employees-side
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeSideUpdate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeSideUpdate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeSideUpdate'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeSideUpdate'
          description: ''
  /api/employees/{id}/:
    get:
      operationId: employees_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - employees
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeList'
          description: ''
    put:
      operationId: employees_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EmployeeCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EmployeeCreate'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeCreate'
          description: ''
    patch:
      operationId: employees_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - employees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEmployeeCreate'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmployeeCreate'
          description: ''
    delete:
      operationId: employees_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - employees
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    AssetCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        serial_number:
          type: string
          maxLength: 100
        category:
          type: integer
          nullable: true
        assigned_to:
          type: integer
          nullable: true
        purchase_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/StatusEnum'
        description:
          type: string
        notes:
          type: string
          writeOnly: true
      required:
      - name
      - purchase_date
      - serial_number
    AssetDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        serial_number:
          type: string
          maxLength: 100
        category:
          type: string
          readOnly: true
        assigned_to:
          type: string
          readOnly: true
        purchase_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/StatusEnum'
        description:
          type: string
      required:
      - assigned_to
      - category
      - id
      - name
      - purchase_date
      - serial_number
    AssetList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        serial_number:
          type: string
          maxLength: 100
        category:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        description:
          type: string
      required:
      - category
      - id
      - name
      - serial_number
    EmployeeCreate:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          maxLength: 128
        department:
          type: integer
          writeOnly: true
        position:
          type: string
          writeOnly: true
      required:
      - department
      - password
      - position
      - username
    EmployeeList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        employee_profile:
          type: string
          readOnly: true
      required:
      - employee_profile
      - id
      - username
    EmployeeSideUpdate:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          maxLength: 128
      required:
      - password
      - username
    PatchedAssetCreate:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        serial_number:
          type: string
          maxLength: 100
        category:
          type: integer
          nullable: true
        assigned_to:
          type: integer
          nullable: true
        purchase_date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/StatusEnum'
        description:
          type: string
        notes:
          type: string
          writeOnly: true
    PatchedEmployeeCreate:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          maxLength: 128
        department:
          type: integer
          writeOnly: true
        position:
          type: string
          writeOnly: true
    PatchedEmployeeSideUpdate:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          maxLength: 128
    StatusEnum:
      enum:
      - IN_USE
      - IN_STORAGE
      - REPAIR
      - RETIRED
      type: string
      description: |-
        * `IN_USE` - In Use
        * `IN_STORAGE` - In Storage
        * `REPAIR` - Under Repair
        * `RETIRED` - Retired
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    UserAssetDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        serial_number:
          type: string
          maxLength: 100
        category:
          type: string
          readOnly: true
      required:
      - category
      - id
      - name
      - serial_number
    UserAssetList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        employee_profile:
          type: string
          readOnly: true
        assets:
          type: array
          items:
            $ref: '#/components/schemas/UserAssetDetail'
          readOnly: true
      required:
      - assets
      - employee_profile
      - id
      - username
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
